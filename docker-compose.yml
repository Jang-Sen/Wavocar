services:
  nginx:
    container_name: wavocar_nginx
    image: nginx:stable-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/templates:/etc/nginx/templates
      - ./.cert/cert.pem:/etc/nginx/.cert/cert.pem
      - ./.cert/key.pem:/etc/nginx/.cert/key.pem
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    depends_on:
      - backend
      - frontend
      - minio
    networks:
      - wavocar_network

  frontend:
    container_name: wavocar_frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/frontend
    env_file:
      - .env.docker
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - backend
      - minio
    tty: true
    stdin_open: true
    networks:
      - wavocar_network

  backend:
    container_name: wavocar_backend
    build:
      context: backend
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./backend:/usr/src/backend
    command: npm run start:dev
    env_file:
      - .env.docker
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - wavocar_network

  postgres:
    container_name: wavocar_postgres
    image: postgres:latest
    restart: always
    env_file:
      - .env.docker
    ports:
      - "${POSTGRES_PORT}:5432"
    networks:
      - wavocar_network

  redis:
    container_name: wavocar_redis
    image: redis:alpine
    restart: always
    env_file:
      - .env.docker
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - wavocar_network

  minio:
    container_name: wavocar_minio
    image: bitnami/minio
    env_file:
      - .env.docker
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    networks:
      - wavocar_network

networks:
  wavocar_network:
    driver: bridge